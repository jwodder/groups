- Add a README
- Document everything!
- Expand defs.tex
- Standardize the test programs and store all of their correct outputs in
  test-out/
- Implement methods for converting non-permutation groups to permutation
  groups?
- Make `subgroupGens` actually return only minimal generating sets
 - âˆ… should be the only generating set for the trivial subgroup; {1} is not a
   minimal generating set for anything
- Try to make `subgroups` and `subgroupGens` faster
- Consider renaming the methods that are named "isFoo" but test for foo-ness of
  their argument rather than of the invocant (e.g., `isSubgroup` ->
  `hasSubgroup`?)

- Permutation:
 - Add a method for getting the inversion number of permuted sequences?
   <http://en.wikipedia.org/wiki/Inversion_(discrete_mathematics)>
 - Make isEven more efficient by counting inversions instead?
 - Add a method for getting a list of all permuted integers?
 - Add methods for converting to & from old Lehmer codes
 - Write a LaTeX file describing the modified Lehmer codes
 - Make operator*/__mul__ pre-calculate the order when the operands are
   disjoint
 - Add a method for getting the cycle type?
 - C++ and Python: Cache the results of `toCycle` rather than `even` and
   `order`?
 - C++ and Python: Stop caching the results of `lehmer`?
 - C++: Add a `lehmer_t` typedef?
